{"version":3,"sources":["components/localization/Localization.js","components/footer/Footer.js","components/about/About.js","components/header/HeaderLarge.js","components/scene/Scene.js","components/group/Group.js","components/project/ProjectSpecs.js","components/project/ProjectPhoto.js","components/project/Project.js","components/work/Work.js","components/main/Main.js","App.js","fonts/Gambetta-Light.woff","fonts/Gambetta-Light.woff2","fonts/Gambetta-Bold.woff","fonts/Gambetta-Bold.woff2","i18n.js","index.js"],"names":["Localization","changeLanguage","currentLanguage","onClick","iconsGroup","component","link","map","icon","index","className","href","rel","target","Footer","props","t","useTranslation","values","title","text","About","valuesDisplay","value","history","push","alt","src","HeaderLarge","cities","city","classNameForCitySpan","onMouseEnter","setCity","spherePosition","planePosition","loader","CubeTextureLoader","melbourneEnvironmentMapTexture","load","louvreEnvironmentMapTexture","templeEnvironmentMapTexture","timesSquareEnvironmentMapTexture","norwayEnvironmentMapTexture","setTexture","textureToUse","Sphere","useSphere","mass","position","args","spherePhysicsRef","castShadow","ref","roughness","metalness","envMap","Html","distanceFactor","style","height","sphereRadius","width","Plane","usePlane","rotation","Math","PI","planePhysicsRef","receiveShadow","color","opacity","MakeAButtloadOfSpheres","number","material","friction","restitution","random","Group","useState","showButtload","setShowButtload","useRef","useEffect","setTimeout","ProjectSpecs","techStackFrontEnd","techStackBackEnd","userStories","github","ProjectPhoto","photos","Project","hidden","onClose","project","projects","role","Work","setHidden","currentProject","setCurrentProject","projectDisplay","prev","workRef","Main","scrollToProjects","current","scrollIntoView","top","left","shadows","camera","fov","near","far","intensity","gravity","defaultContactMaterial","OrbitControls","minPolarAngle","maxPolarAngle","enableZoom","withRouter","i18n","selectedLanguage","path","render","routerProps","language","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","basename","process","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.5eb8a718.chunk.js","sourcesContent":["import React from 'react'\nimport './localization.css'\n\nconst Localization = ({ changeLanguage, currentLanguage }) => {\n\n  switch (currentLanguage) {\n    case 'en':\n      return (\n        <div>\n          <button onClick={() => changeLanguage('fr')}>Français</button>·\n          <button onClick={() => changeLanguage('jp')}>日本語</button>\n        </div>\n      )\n    case 'fr':\n      return (\n        <div>\n          <button onClick={() => changeLanguage('en')}>English</button>·\n          <button onClick={() => changeLanguage('jp')}>日本語</button>\n        </div>\n      )\n    case 'jp':\n      return (\n        <div>\n          <button onClick={() => changeLanguage('fr')}>Français</button>·\n          <button onClick={() => changeLanguage('en')}>English</button>\n        </div>\n      )\n    default:\n      return (\n        <div>\n          <button onClick={() => changeLanguage('fr')}>Français</button>·\n          <button onClick={() => changeLanguage('jp')}>日本語</button>·\n          <button onClick={() => changeLanguage('en')}>English</button>\n        </div>\n      )\n  }\n  \n}\n\nexport default Localization","import React from 'react'\nimport './footer.css'\nimport { AiFillGithub, AiOutlineMail } from 'react-icons/ai'\nimport { TiSocialLinkedin } from 'react-icons/ti'\nimport {  useTranslation } from 'react-i18next'\n\nconst allIcons = [\n  \n  {\n    component: <AiOutlineMail />,\n    link: 'mailto:bridgetrosefitz@gmail.com',\n  },\n  {\n    component: <TiSocialLinkedin />,\n    link: 'https://www.linkedin.com/in/bridgetrosefitzgerald/',\n  },\n  {\n    component: <AiFillGithub />,\n    link: 'https://github.com/bridgetrosefitz'\n  }\n]\n\nconst iconsGroup = allIcons.map((icon, index) => {\n  return (\n    <a key={index} className='contact-logos' href={icon.link} rel='noreferrer' target=\"_blank\">\n      {icon.component}\n    </a>\n  )\n})\n\nconst Footer = props => {\n  const { t } = useTranslation()\n\n  return(\n    <div className='footer'>\n      <div className='footer-text'>\n        <p>{t(\"footer.Don't hesitate to say hello\")}</p>\n        <p>{t(\"footer.I would love to hear from you\")}</p>\n      </div>\n      <div className='email-div'><a href='mailto:bridgetrosefitz@gmail.com' rel='noreferrer' target='_blank'>bridgetrosefitz@gmail.com</a></div>\n      <div className='icons-container'>{iconsGroup}</div>\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport Localization from '../localization/Localization'\nimport Footer from '../footer/Footer'\nimport './about.css'\n\nconst values = [\n  {\n    title: 'about.Make it ok to be wrong',\n    text: 'about.Make it ok to be wrong text'\n  },\n  {\n    title: 'about.Be the one to change',\n    text: 'about.Be the one to change text'\n  },\n  {\n    title: 'about.Care about the people you work with',\n    text: 'about.Care about the people you work with text'\n  },\n  {\n    title: 'about.People can change',\n    text: 'about.People can change text'\n  }\n]\n\nconst About = props => {\n  const { t } = useTranslation()\n\n  const valuesDisplay = values.map((value, index) => {\n      return(\n        <>\n        <h3 key={index} className='values-header'>{t(value.title)}</h3>\n        <p key={index} className='values-p'>{t(value.text)}</p>\n        </>\n      )\n  })\n\n\n\n  return(\n    <>\n    <Localization {...props}/>\n    <button onClick={() => props.history.push('/')} className='side-button'>{t('work.Work button')}</button>\n      <h2 className='about-header' >{t('about.About me')}</h2>\n      <p className='about-p'>{t('about.About main text')}<span className='small-text'>{t('about.Asterisk')}</span></p>\n      <br/>\n      <div className='photo-of-me'>\n        <img alt='Me at Trolltunga, Norway' src='/photos/Trolltunga.jpeg'/>\n      </div>\n      <h2 className='about-header'>{t('about.My values')}</h2>\n      {valuesDisplay}\n    <Footer/>\n    </>\n  )\n}\n\nexport default About","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport './header.css'\n\nconst HeaderLarge = props => {\n  const { t } = useTranslation()\n\n  const citySpans = () => {\n    const arrayOfSpans = props.cities.map((city, index) => {\n      let classNameForCitySpan = ''\n      if(props.city === city) {classNameForCitySpan = 'selected'}\n      if (index === 0) {\n        return <span key={index} className={`city ${classNameForCitySpan}`} onMouseEnter={() => props.setCity(city)}>{t(`header.${city}`)}</span>\n        }\n      else {\n        return (<span key={index} className={`city ${classNameForCitySpan}`} onMouseEnter={() => props.setCity(city)}>{` · ${t(`header.${city}`)}`}</span>)\n      }\n  })\n\n    return arrayOfSpans\n  }\n\n  return (\n    <div className=\"header\">\n      <h1>Bridget Fitzgerald</h1>\n      <h2>{t('header.Full-stack-developer')}</h2>\n      <h3>{citySpans()}</h3>\n    </div>\n  )\n}\n\nexport default HeaderLarge\n\n","import React from 'react'\nimport { CubeTextureLoader } from 'three'\nimport { useSphere, usePlane} from '@react-three/cannon'\nimport { Html } from '@react-three/drei'\n\nconst sphereMetalness = 1\nconst sphereRoughness = 0.05\nconst sphereRadius = 10\nconst spherePosition = [0, 30, 0]\nconst planePosition = [0, -12, 0]\nconst loader = new CubeTextureLoader()\n\n\nconst melbourneEnvironmentMapTexture = loader.load([\n  '/environments/melbourne/px.png',\n  '/environments/melbourne/nx.png',\n  '/environments/melbourne/py.png',\n  '/environments/melbourne/ny.png',\n  '/environments/melbourne/pz.png',\n  '/environments/melbourne/nz.png',\n])\n\n\nconst louvreEnvironmentMapTexture = loader.load([\n  '/environments/louvre/px.png',\n  '/environments/louvre/nx.png',\n  '/environments/louvre/py.png',\n  '/environments/louvre/ny.png',\n  '/environments/louvre/pz.png',\n  '/environments/louvre/nz.png',\n])\n\nconst templeEnvironmentMapTexture = loader.load([\n  '/environments/inari-temple/px.png',\n  '/environments/inari-temple/nx.png',\n  '/environments/inari-temple/py.png',\n  '/environments/inari-temple/ny.png',\n  '/environments/inari-temple/pz.png',\n  '/environments/inari-temple/nz.png',\n])\n\nconst timesSquareEnvironmentMapTexture = loader.load([\n  '/environments/times-square/px.png',\n  '/environments/times-square/nx.png',\n  '/environments/times-square/py.png',\n  '/environments/times-square/ny.png',\n  '/environments/times-square/pz.png',\n  '/environments/times-square/nz.png',\n])\n\nconst norwayEnvironmentMapTexture = loader.load([\n  '/environments/norway/px.png',\n  '/environments/norway/nx.png',\n  '/environments/norway/py.png',\n  '/environments/norway/ny.png',\n  '/environments/norway/pz.png',\n  '/environments/norway/nz.png',\n])\n\nconst setTexture = (city) => {\n\n  let textureToUse = melbourneEnvironmentMapTexture\n\n  switch (city) {\n    case 'Melbourne':\n      textureToUse = melbourneEnvironmentMapTexture\n      break\n    case 'NYC':\n      textureToUse = timesSquareEnvironmentMapTexture\n      break\n    case 'Paris':\n      textureToUse = louvreEnvironmentMapTexture\n      break\n    case 'Tokyo':\n      textureToUse = templeEnvironmentMapTexture\n      break\n    case 'Oslo':\n      textureToUse = norwayEnvironmentMapTexture\n      break\n    default:\n      textureToUse = melbourneEnvironmentMapTexture\n      break\n  }\n\n  return textureToUse\n}\n\nexport const Sphere = props => {\n\n  const [spherePhysicsRef] = useSphere(() => ({ mass: 10, position: spherePosition, args: [sphereRadius]}))\n\n  return (\n      <mesh\n        {...props}\n        castShadow\n        ref={spherePhysicsRef}\n        position={spherePosition}>\n        <sphereGeometry args={[sphereRadius, 100, 100]} />\n          <meshStandardMaterial\n          roughness={sphereRoughness}\n          metalness={sphereMetalness}\n          envMap={setTexture(props.city)}\n          />\n      <Html distanceFactor={800}>\n        <div onClick={props.onClick} style={{ height: sphereRadius * 2, width: sphereRadius * 2}} className='sphereHtml'/>\n        </Html>\n      </mesh>\n  )\n}\n\nexport const Plane = () => {\n  const [planePhysicsRef] = usePlane(() => ({ mass: 0, position: planePosition, rotation: [-Math.PI * 0.5, 0, 0] }))\n    return(\n      <mesh \n        receiveShadow\n        ref={planePhysicsRef} \n        position={planePosition}\n        rotation={[-Math.PI * 0.5, 0, 0]}  >\n        <planeGeometry args={[100, 100]} />\n        <shadowMaterial color=\"#171717\" opacity={0.1} />\n    </mesh>\n    )\n}\n\nexport const MakeAButtloadOfSpheres = ({number, city}) => {\n  const radius = 0.5\n  const [ref] = useSphere(() => ({\n    mass: 10, \n    material: { friction: 0.02, restitution: 5 },\n    position: [(Math.random() - 0.5) * 0.5 + spherePosition[0], (Math.random() - 0.5) * (planePosition[1] + (sphereRadius * 0.5)), (Math.random() - 0.5) + spherePosition[2] -2],\n    args: radius\n  }))\n  \n  return (\n    <instancedMesh\n      castShadow\n      ref={ref}\n      args={[null, null, number]}>\n      <sphereBufferGeometry args={[radius, 100, 100]}/>\n      <meshStandardMaterial\n        roughness={sphereRoughness}\n        metalness={sphereMetalness}\n        envMap={setTexture(city)} />\n    </instancedMesh>\n  )\n}\n\n","import { useEffect, useState, useRef } from 'react'\nimport { Sphere, Plane, MakeAButtloadOfSpheres } from '../scene/Scene'\n\nconst Group = props => {\n  const [showButtload, setShowButtload] = useState(false)\n  const ref = useRef()\n\n  useEffect(() => {\n\n    if (showButtload === true) {\n      setTimeout(() => {\n        setShowButtload(false)\n      }, 8000)\n    }\n\n  }, [showButtload])\n\n  return(\n    <group ref={ref}>\n      {!showButtload && <Sphere city={props.city} onClick={() => setShowButtload(!showButtload)} />}\n      <Plane />\n      {showButtload && <MakeAButtloadOfSpheres city={props.city} number={100} />}\n\n    </group>\n  )\n}\n\nexport default Group","import React from 'react'\nimport './project.css'\nimport { useTranslation } from 'react-i18next'\n\nconst ProjectSpecs = props => {\n  const { t } = useTranslation()\n\n  return(\n    <div className='project-specs'>\n      <p><b>Front end</b><span>{t(props.techStackFrontEnd)}</span></p>\n      <p><b>Back end</b><span>{t(props.techStackBackEnd)}</span></p>\n      <p>See it <a href={props.link} rel='noreferrer' target='_blank'>live</a> or view the <a href={props.userStories} rel='noreferrer' target='_blank'>user stories</a>, or <a href={props.github} rel='noreferrer' target='_blank'>code</a>\n        .\n        </p>\n      <p className='project-summary'>{t(props.text)}</p>\n    </div>\n  )\n}\n\nexport default ProjectSpecs","import React from 'react'\n\nconst ProjectPhoto = props => {\n\n  return(\n    <div className='project-photo'>\n      <img alt='Project snapshot' src={props.photos[0]}/>\n    </div>\n  )\n}\n\nexport default ProjectPhoto","import React from 'react';\nimport './project.css'\nimport ProjectSpecs from './ProjectSpecs';\nimport ProjectPhoto from './ProjectPhoto';\nimport { useTranslation } from 'react-i18next';\n\nconst Project = ({hidden, onClose, project}) => {\n const { t } = useTranslation()\n\n  return (\n    \n    <>{project ? \n      (<div className={`${hidden ? 'hidden' : null} project`}>\n        <h1>{t(project.title)}\n          <div className='close-icon' onClick={onClose}>\n            <div className='close-left'></div>\n            <div className='close-right'></div>\n          </div>\n        </h1>\n        <div className='single-project-display-container'>\n        <ProjectSpecs {...project}/>\n        <ProjectPhoto {...project} />\n        </div>\n      </div>) : null\n    }\n    </>\n  )\n}\n\nexport default Project","import React, { useState } from 'react'\nimport './work.css'\nimport Project from '../project/Project'\nimport { useTranslation } from 'react-i18next'\n\nconst projects = [\n  {\n    title: 'work.RACI.Title',\n    text: 'work.RACI.Project main text',\n    techStackFrontEnd: 'work.RACI.Tech stack front end',\n    techStackBackEnd: 'work.RACI.Tech stack back end',\n    photos: ['/project-snapshots/raci.png'],\n    role: 'Developer',\n    link: 'https://bridgetro.se/raci/',\n    github: 'https://github.com/bridgetrosefitz/raci',\n    userStories: 'https://www.notion.so/Bridget-Fitzgerald-RACI-3166a2742268438889473e69c943d72e'\n  },\n  {\n    title: 'work.Digital Innovation.Title',\n    text: 'work.Digital Innovation.Project main text',\n    techStackFrontEnd: 'work.Digital Innovation.Tech stack front end',\n    techStackBackEnd: 'work.Digital Innovation.Tech stack back end',\n    photos: ['project-snapshots/digital-innovation.png'],\n    role: 'Developer',\n    link: 'http://digital-innovation-stats.herokuapp.com/',\n    github: 'https://github.com/bridgetrosefitz/digital_innovation',\n    userStories: 'https://www.notion.so/Bridget-Fitzgerald-Digital-Innovation-0c0a03caf93f4643bfa85f634bd0d8ae'\n  },\n  {\n    title: 'work.Particles.Title',\n    text: 'work.Particles.Project main text',\n    techStackFrontEnd: 'work.Particles.Tech stack front end',\n    techStackBackEnd: 'work.Particles.Tech stack back end',\n    photos: ['project-snapshots/particles.png'],\n    role: 'Developer',\n    link: 'http://bridgetro.se',\n    github: 'https://github.com/bridgetrosefitz/personal-website',\n    userStories: 'bridgetro.se'\n  },\n  {\n    title: 'work.Food Systems Dialogues.Title',\n    text: 'work.Food Systems Dialogues.Project main text',\n    techStackFrontEnd: 'work.Food Systems Dialogues.Tech stack front end',\n    techStackBackEnd: 'work.Food Systems Dialogues.Tech stack back end',\n    photos: ['project-snapshots/fsds.png'],\n    role: 'Product-managed',\n    link: 'https://fsds-tool.herokuapp.com/',\n    github: 'https://github.com/Jesus-Escalona',\n    userStories: 'bridgetro.se'\n  },\n]\n\nconst Work = props => {\n\n  const [hidden, setHidden] = useState(true)\n  const [currentProject, setCurrentProject] = useState(null)\n  const { t } = useTranslation()\n\n  const projectDisplay = projects.map((project, index) => {\n\n    return (\n      <div key={index} className=\"grid-item\" onClick={() => {\n        setCurrentProject(project)\n        setHidden(prev => !prev)\n      }}>\n        <img alt={t(project.title)} src={project.photos[0]}></img>\n          <p>{t(project.title)}{project.role !== 'Developer' ? (<span className='small-text'> ({t('work.Product-managed')})</span>) : null}</p>\n      </div>)\n  })\n\n  return (\n    <>  \n      <Project hidden={hidden} onClose={() => setHidden(prev => !prev)} project={currentProject} />\n      <div ref={props.workRef} className='company-logo-display-container'>\n        <img alt='Shadow' src='company-logos/shadow-logo.svg'></img>\n        <img alt='LEK Consulting' src='company-logos/lek-logo.svg'></img>\n        <img alt='World Economic Forum' src='company-logos/wef-logo.png'></img>\n        <img alt='United Nations' src='company-logos/united-nations-logo.png'></img>\n        <img alt='Institut Montaigne' src='company-logos/institut-montaigne-logo.png'></img>\n        <img alt='Sciences Po' src='company-logos/sciences-po-logo.png'></img>\n        <img alt='Monash University' src='company-logos/monash-university-logo.png'></img>\n        <img alt='国際交流基金' src='company-logos/japan-foundation-logo-english.png'></img>\n        <img alt='Australian Music Examinations Board' src='company-logos/ameb-logo.png'></img>\n      </div>\n      <div className='spacing-element-between-logos-and-projects'/>\n      <h2 className='tech-projects-header'>Projects</h2>\n      <div className='projects-display-container'>\n        {projectDisplay}\n      </div>\n    </>\n  )\n}\n\nexport default Work","import React, { useState, useRef } from 'react'\nimport './main.css'\nimport { Canvas } from '@react-three/fiber'\nimport { Physics } from '@react-three/cannon'\nimport Localization from '../localization/Localization'\nimport HeaderLarge from '../header/HeaderLarge'\nimport Group from '../group/Group'\nimport Work from '../work/Work'\nimport Footer from '../footer/Footer'\nimport { OrbitControls } from '@react-three/drei'\nimport { useTranslation } from 'react-i18next'\n\nconst Main = props => {\n  const { t } = useTranslation()\n  const [city, setCity] = useState('Melbourne')\n  const cities = ['Melbourne', 'NYC', 'Paris', 'Tokyo', 'Oslo']\n  const workRef = useRef()\n\n  const scrollToProjects = () => workRef.current.scrollIntoView()\n\n  return (\n    <>\n      <Localization {...props}/>\n      <HeaderLarge cities={cities} city={city} setCity={setCity}/>\n      <Canvas\n        style={{ position: 'absolute', height: '100vh', width: '100%', top: 0, left: 0}}\n        shadows\n        camera={{ fov: 45, near: 0.1, far: 1000, position: [0, 50, 40] }}>\n      <ambientLight\n        intensity={0.7}\n      />\n      <directionalLight\n        castShadow\n        shadow-mapSize-height={1024}\n        shadow-mapSize-width={1024}\n        shadow-camera-near={0.001}\n        shadow-camera-far={1000}\n        intensity={0.02}\n        position={[1.5, 100, 1]}\n        shadow-camera-left={-50}\n        shadow-camera-right={50}\n        shadow-camera-top={50}\n        shadow-camera-bottom={-50}\n      />\n      <Physics gravity={[0, -120, 0]} defaultContactMaterial={{friction: 0.05, restitution: 0.5}}>\n        <Group city={city}/>\n      </Physics>\n        <OrbitControls\n          minPolarAngle={Math.PI * 0.5}\n          maxPolarAngle={Math.PI * 0.5}\n          enableZoom={false}\n        />\n      </Canvas>\n      <div className='spacing-element-for-canvas'>\n        <button className='side-button' onClick={() => props.history.push('/about')}>\n          {t('main.About')}\n        </button>\n      </div>\n      <div className='main-content'>\n        <div className='nav-arrow' onClick={() => scrollToProjects()}>\n          <div className='nav-arrow-left-tip'></div>\n          <div className='nav-arrow-right-tip'></div>\n        </div>\n        <Work workRef={workRef} scrollToProjects={scrollToProjects}/>\n      </div>\n      <Footer/>\n    </>\n  );\n}\n\nexport default Main\n","import React from 'react'\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport About from './components/about/About'\nimport Main from './components/main/Main'\nimport { useTranslation } from 'react-i18next'\n\nconst App = () => {\n  const { i18n } = useTranslation();\n\n  const changeLanguage = (selectedLanguage) => {\n    i18n.changeLanguage(selectedLanguage)\n  };\n\n  return (\n    <Switch>\n      <Route\n        path=\"/about\"\n        render={routerProps => <About {...routerProps}\n        changeLanguage={changeLanguage}\n        currentLanguage={i18n.language} />}/>\n      <Route\n        path=\"/\"\n        render={routerProps => <Main {...routerProps}\n        changeLanguage={changeLanguage}\n        currentLanguage={i18n.language} />} />\n    </Switch>\n  )\n}\n\nexport default withRouter(App)","export default __webpack_public_path__ + \"static/media/Gambetta-Light.42bd64d0.woff\";","export default __webpack_public_path__ + \"static/media/Gambetta-Light.34c53d67.woff2\";","export default __webpack_public_path__ + \"static/media/Gambetta-Bold.5341fb53.woff\";","export default __webpack_public_path__ + \"static/media/Gambetta-Bold.619ea7c4.woff2\";","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport './fonts/Gambetta-Light.woff';\nimport './fonts/Gambetta-Light.woff2';\nimport './fonts/Gambetta-Bold.woff';\nimport './fonts/Gambetta-Bold.woff2';\nimport './i18n';\n\nReactDOM.render(\n\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <React.StrictMode>\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <App />\n      </Suspense>\n      </React.StrictMode>\n    </BrowserRouter>, document.getElementById('root')\n\n);"],"sourceRoot":""}